{"ast":null,"code":"import _regeneratorRuntime from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import SimpleReactValidator from\"simple-react-validator\";import{toast}from\"react-toastify\";import{registerUser}from\"./../../services/userService\";import{Sugar}from\"react-preloaders\";import Helmet from\"react-helmet\";var Register=function Register(_ref){var history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),fullname=_useState2[0],setFullname=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),policy=_useState8[0],setPolicy=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),forceUpdate=_useState12[1];var validator=useRef(new SimpleReactValidator({messages:{required:\"پر کردن این فیلد الزامی میباشد\",min:\"کمتر از 5 کاراکتر نباید باشد\",email:\"ایمیل نوشته شده صحیح نمی باشد\"},element:function element(message){return React.createElement(\"div\",{style:{color:\"red\"}},message);}}));// useEffect(() => {\n//     document.title = \"تاپلرن | عضویت در سایت\";\n// }, []);\nvar reset=function reset(){setFullname(\"\");setEmail(\"\");setPassword(\"\");};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var user,_ref3,status;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();user={fullname:fullname,email:email,password:password};_context.prev=2;if(!validator.current.allValid()){_context.next=12;break;}setLoading(true);_context.next=7;return registerUser(user);case 7:_ref3=_context.sent;status=_ref3.status;if(status===201){toast.success(\"کاربر با موفقیت ساخته شد.\",{position:\"top-right\",closeOnClick:true});setLoading(false);history.push(\"/login\");reset();}_context.next=14;break;case 12:validator.current.showMessages();forceUpdate(1);case 14:_context.next=21;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);toast.error(\"مشکلی پیش آمده.\",{position:\"top-right\",closeOnClick:true});setLoading(false);console.log(_context.t0);case 21:case\"end\":return _context.stop();}}},_callee,null,[[2,16]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return React.createElement(\"main\",{className:\"client-page\"},React.createElement(\"div\",{className:\"container-content\"},React.createElement(\"header\",null,React.createElement(\"h2\",null,\" \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A \")),React.createElement(Helmet,null,React.createElement(\"title\",null,\"\\u062A\\u0627\\u067E\\u0644\\u0631\\u0646 | \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\")),React.createElement(Sugar,{time:0,color:\"#fc03d7\",customLoading:loading}),React.createElement(\"div\",{className:\"form-layer\"},React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"span\",{className:\"input-group-addon\",id:\"username\"},React.createElement(\"i\",{className:\"zmdi zmdi-account\"})),React.createElement(\"input\",{type:\"text\",name:\"fullname\",className:\"form-control\",placeholder:\"\\u0646\\u0627\\u0645 \\u0648 \\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\"aria-describedby\":\"username\",value:fullname,onChange:function onChange(e){setFullname(e.target.value);validator.current.showMessageFor(\"fullname\");}}),validator.current.message(\"fullname\",fullname,\"required|min:5\")),React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"span\",{className:\"input-group-addon\",id:\"email-address\"},React.createElement(\"i\",{className:\"zmdi zmdi-email\"})),React.createElement(\"input\",{type:\"text\",name:\"email\",className:\"form-control\",placeholder:\"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\"aria-describedby\":\"email-address\",value:email,onChange:function onChange(e){setEmail(e.target.value);validator.current.showMessageFor(\"email\");}}),validator.current.message(\"email\",email,\"required|email\")),React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"span\",{className:\"input-group-addon\",id:\"password\"},React.createElement(\"i\",{className:\"zmdi zmdi-lock\"})),React.createElement(\"input\",{type:\"password\",name:\"password\",className:\"form-control\",placeholder:\"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \",\"aria-describedby\":\"password\",value:password,onChange:function onChange(e){setPassword(e.target.value);validator.current.showMessageFor(\"password\");}}),validator.current.message(\"password\",password,\"required|min:5\")),React.createElement(\"div\",{className:\"accept-rules\"},React.createElement(\"label\",null,React.createElement(\"input\",{type:\"checkbox\",name:\"policy\",value:policy,onChange:function onChange(e){setPolicy(e.currentTarget.checked);validator.current.showMessageFor(\"policy\");}}),\" \",\"\\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646 \\u0648 \\u0645\\u0642\\u0631\\u0631\\u0627\\u062A \\u0633\\u0627\\u06CC\\u062A \\u0631\\u0627 \\u0645\\u06CC\\u067E\\u0630\\u06CC\\u0631\\u0645\",\" \"),validator.current.message(\"policy\",policy,\"required\")),React.createElement(\"div\",{className:\"link\"},React.createElement(\"a\",{href:\"\"},\" \",React.createElement(\"i\",{className:\"zmdi zmdi-assignment\"}),\" \\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646 \\u0648 \\u0645\\u0642\\u0631\\u0631\\u0627\\u062A \\u0633\\u0627\\u06CC\\u062A !\"),React.createElement(\"a\",{href:\"\"},\" \",React.createElement(\"i\",{className:\"zmdi zmdi-account\"}),\" \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\",\" \")),React.createElement(\"button\",{className:\"btn btn-success\"},\" \",\"\\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\",\" \")))));};export default Register;","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/components/Register/Register.jsx"],"names":["React","useState","useRef","useEffect","SimpleReactValidator","toast","registerUser","Sugar","Helmet","Register","history","fullname","setFullname","email","setEmail","password","setPassword","policy","setPolicy","loading","setLoading","forceUpdate","validator","messages","required","min","element","message","color","reset","handleSubmit","event","preventDefault","user","current","allValid","status","success","position","closeOnClick","push","showMessages","error","console","log","e","target","value","showMessageFor","currentTarget","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport { registerUser } from \"./../../services/userService\";\r\nimport { Sugar } from \"react-preloaders\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Register = ({ history }) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [policy, setPolicy] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [, forceUpdate] = useState();\r\n    const validator = useRef(\r\n        new SimpleReactValidator({\r\n            messages: {\r\n                required: \"پر کردن این فیلد الزامی میباشد\",\r\n                min: \"کمتر از 5 کاراکتر نباید باشد\",\r\n                email: \"ایمیل نوشته شده صحیح نمی باشد\"\r\n            },\r\n            element: message => <div style={{ color: \"red\" }}>{message}</div>\r\n        })\r\n    );\r\n\r\n    // useEffect(() => {\r\n    //     document.title = \"تاپلرن | عضویت در سایت\";\r\n    // }, []);\r\n\r\n    const reset = () => {\r\n        setFullname(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const user = {\r\n            fullname,\r\n            email,\r\n            password\r\n        };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                setLoading(true);\r\n                const { status } = await registerUser(user);\r\n                if (status === 201) {\r\n                    toast.success(\"کاربر با موفقیت ساخته شد.\", {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true\r\n                    });\r\n                    setLoading(false);\r\n                    history.push(\"/login\");\r\n                    reset();\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            toast.error(\"مشکلی پیش آمده.\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true\r\n            });\r\n            setLoading(false);\r\n            console.log(ex);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"client-page\">\r\n            <div className=\"container-content\">\r\n                <header>\r\n                    <h2> عضویت در سایت </h2>\r\n                </header>\r\n                <Helmet>\r\n                    <title>تاپلرن | عضویت در سایت</title>\r\n                </Helmet>\r\n\r\n                <Sugar time={0} color=\"#fc03d7\" customLoading={loading} />\r\n\r\n                <div className=\"form-layer\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"username\">\r\n                                <i className=\"zmdi zmdi-account\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"fullname\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"نام و نام خانوادگی\"\r\n                                aria-describedby=\"username\"\r\n                                value={fullname}\r\n                                onChange={e => {\r\n                                    setFullname(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"fullname\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"fullname\",\r\n                                fullname,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span\r\n                                className=\"input-group-addon\"\r\n                                id=\"email-address\"\r\n                            >\r\n                                <i className=\"zmdi zmdi-email\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ایمیل\"\r\n                                aria-describedby=\"email-address\"\r\n                                value={email}\r\n                                onChange={e => {\r\n                                    setEmail(e.target.value);\r\n                                    validator.current.showMessageFor(\"email\");\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"email\",\r\n                                email,\r\n                                \"required|email\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"password\">\r\n                                <i className=\"zmdi zmdi-lock\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"رمز عبور \"\r\n                                aria-describedby=\"password\"\r\n                                value={password}\r\n                                onChange={e => {\r\n                                    setPassword(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"password\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"password\",\r\n                                password,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"accept-rules\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"policy\"\r\n                                    value={policy}\r\n                                    onChange={e => {\r\n                                        setPolicy(e.currentTarget.checked);\r\n                                        validator.current.showMessageFor(\r\n                                            \"policy\"\r\n                                        );\r\n                                    }}\r\n                                />{\" \"}\r\n                                قوانین و مقررات سایت را میپذیرم{\" \"}\r\n                            </label>\r\n                            {validator.current.message(\r\n                                \"policy\",\r\n                                policy,\r\n                                \"required\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"link\">\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-assignment\"></i> قوانین\r\n                                و مقررات سایت !\r\n                            </a>\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-account\"></i> ورود به\r\n                                سایت{\" \"}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\">\r\n                            {\" \"}\r\n                            عضویت در سایت{\" \"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}