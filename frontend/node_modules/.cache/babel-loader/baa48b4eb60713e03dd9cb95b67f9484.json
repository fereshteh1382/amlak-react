{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\src\\\\containers\\\\Toplearn.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Course from \"../components/Course/Course\";\nimport MainLayout from \"../components/Layouts/MainLayout\";\nimport Login from \"../components/Login/Login\";\nimport Register from \"./../components/Register/Register\";\nimport Archive from \"./../components/Course/Archive\";\nimport SingleCourse from \"./../components/Course/SingleCourse\";\nimport UserProfile from \"./../components/Profile/UserProfile\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { paginate } from \"./../utils/paginate\";\nimport { addUser, clearUser } from \"./../actions/user\";\nimport { decodeToken } from \"./../utils/decodeToken\";\nimport Logout from \"./../components/Login/Logout\";\nimport { isEmpty } from \"lodash\";\n\nconst Toplearn = () => {\n  const courses = useSelector(state => state.courses);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const indexCourses = paginate(courses, 1, 8);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const decodedToken = decodeToken(token);\n      const dateNow = Date.now() / 1000;\n\n      if (decodedToken.payload.exp < dateNow) {\n        localStorage.removeItem(\"token\");\n        dispatch(clearUser());\n      } else dispatch(addUser(decodedToken.payload.user));\n    }\n  }, []);\n  return React.createElement(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/logout\",\n    render: () => isEmpty(user) ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/archive\",\n    component: Archive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/course/:id\",\n    component: SingleCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/user-profile\",\n    component: UserProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: () => React.createElement(Course, {\n      courses: indexCourses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default Toplearn;","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/containers/Toplearn.jsx"],"names":["React","useEffect","Switch","Route","Redirect","Course","MainLayout","Login","Register","Archive","SingleCourse","UserProfile","useSelector","useDispatch","paginate","addUser","clearUser","decodeToken","Logout","isEmpty","Toplearn","courses","state","user","dispatch","indexCourses","token","localStorage","getItem","decodedToken","dateNow","Date","now","payload","exp","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Course from \"../components/Course/Course\";\r\nimport MainLayout from \"../components/Layouts/MainLayout\";\r\nimport Login from \"../components/Login/Login\";\r\nimport Register from \"./../components/Register/Register\";\r\nimport Archive from \"./../components/Course/Archive\";\r\nimport SingleCourse from \"./../components/Course/SingleCourse\";\r\nimport UserProfile from \"./../components/Profile/UserProfile\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport { addUser, clearUser } from \"./../actions/user\";\r\nimport { decodeToken } from \"./../utils/decodeToken\";\r\nimport Logout from \"./../components/Login/Logout\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst Toplearn = () => {\r\n    const courses = useSelector(state => state.courses);\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const indexCourses = paginate(courses, 1, 8);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            const decodedToken = decodeToken(token);\r\n            const dateNow = Date.now() / 1000;\r\n\r\n            if (decodedToken.payload.exp < dateNow) {\r\n                localStorage.removeItem(\"token\");\r\n                dispatch(clearUser());\r\n            } else dispatch(addUser(decodedToken.payload.user));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route\r\n                    path=\"/logout\"\r\n                    render={() =>\r\n                        isEmpty(user) ? <Redirect to=\"/\" /> : <Logout />\r\n                    }\r\n                />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"/archive\" component={Archive} />\r\n                <Route path=\"/course/:id\" component={SingleCourse} />\r\n                <Route path=\"/user-profile\" component={UserProfile} />\r\n                <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={() => <Course courses={indexCourses} />}\r\n                />\r\n            </Switch>\r\n        </MainLayout>\r\n    );\r\n};\r\n\r\nexport default Toplearn;\r\n"]},"metadata":{},"sourceType":"module"}