{"ast":null,"code":"var _jsxFileName = \"F:\\\\amlak-react\\\\frontend\\\\src\\\\components\\\\context\\\\customerContext.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { useDispatch } from \"react-redux\";\nimport { context } from \"./context\";\nimport { successMessage, errorMessage } from \"../../utils/message\";\nimport { RegisterCustomers } from \"../../services/userService\";\nimport { decodeToken } from \"../../utils/decodeToken\";\nimport { withRouter } from \"react-router\";\nimport { addUser } from \"../../actions/user\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\nconst CustomerContext = ({\n  children,\n  history\n}) => {\n  const [fullname, setFullname] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [desc, setDesc] = useState();\n  const [, forceUpdate] = useState();\n  const dispatch = useDispatch();\n  /*const resetStates = () => {\r\n      setFullname(\"\");\r\n      setMobile(\"\");\r\n      setPassword(\"\");\r\n      setPolicy();\r\n  };*/\n\n  /************************************************* */\n\n  const handleRegisterCustomers = async event => {\n    event.preventDefault();\n    const customer = {\n      fullname,\n      tel,\n      address,\n      desc\n    };\n\n    try {\n      //  if (validator.current.allValid()) {\n      dispatch(showLoading());\n      const {\n        status\n      } = await RegisterCustomers(customer);\n      console.log(status);\n\n      if (status === 201) {\n        successMessage(\"کاربر با موفقیت ساخته شد.\");\n        dispatch(hideLoading());\n        history.push(\"/login\");\n      } else if (status === 202) {\n        errorMessage(\"شناسه ای با این شماره موبایل قبلا ثبت شده است.\");\n        dispatch(hideLoading());\n        history.push(\"/resister\");\n      }\n      /* } else {\r\n           validator.current.showMessages();\r\n           forceUpdate(1);\r\n       }*/\n\n    } catch (ex) {\n      errorMessage(\"مشکلی در ثبت نام پیش آمده.\");\n      dispatch(hideLoading());\n      console.log(ex);\n    }\n  };\n\n  return React.createElement(context.Provider, {\n    value: {\n      fullname,\n      /// setFullname,\n      tel,\n      //  setMobile,\n      address,\n      // setPassword,\n      desc,\n      // setPolicy,\n      //validator,\n      handleRegisterCustomers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, children);\n};\n\nexport default withRouter(CustomerContext);","map":{"version":3,"sources":["F:/amlak-react/frontend/src/components/context/customerContext.jsx"],"names":["React","useState","useRef","SimpleReactValidator","useDispatch","context","successMessage","errorMessage","RegisterCustomers","decodeToken","withRouter","addUser","showLoading","hideLoading","CustomerContext","children","history","fullname","setFullname","tel","setTel","address","setAddress","desc","setDesc","forceUpdate","dispatch","handleRegisterCustomers","event","preventDefault","customer","status","console","log","push","ex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,qBAA7C;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,EAAhC;AAEA,QAAM,GAAGwB,WAAH,IAAkBxB,QAAQ,EAAhC;AAEA,QAAMyB,QAAQ,GAAGtB,WAAW,EAA5B;AAIA;;;;;;;AAQA;;AACA,QAAMuB,uBAAuB,GAAG,MAAMC,KAAN,IAAe;AAC3CA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG;AACbb,MAAAA,QADa;AACHE,MAAAA,GADG;AACEE,MAAAA,OADF;AACWE,MAAAA;AADX,KAAjB;;AAIA,QAAI;AACA;AACAG,MAAAA,QAAQ,CAACd,WAAW,EAAZ,CAAR;AACA,YAAM;AAAEmB,QAAAA;AAAF,UAAa,MAAMvB,iBAAiB,CAACsB,QAAD,CAA1C;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAIA,MAAM,KAAK,GAAf,EAAoB;AAChBzB,QAAAA,cAAc,CAAC,2BAAD,CAAd;AACAoB,QAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAG,QAAAA,OAAO,CAACkB,IAAR,CAAa,QAAb;AACH,OAJD,MAIO,IAAIH,MAAM,KAAK,GAAf,EAAoB;AACvBxB,QAAAA,YAAY,CAAC,gDAAD,CAAZ;AACAmB,QAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAG,QAAAA,OAAO,CAACkB,IAAR,CAAa,WAAb;AACH;AACD;;;;;AAKH,KAnBD,CAmBE,OAAOC,EAAP,EAAW;AACT5B,MAAAA,YAAY,CAAC,4BAAD,CAAZ;AACAmB,MAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH;AACJ,GA9BD;;AA+BA,SACI,oBAAC,OAAD,CAAS,QAAT;AACI,IAAA,KAAK,EAAE;AACHlB,MAAAA,QADG;AAEH;AACAE,MAAAA,GAHG;AAIH;AACAE,MAAAA,OALG;AAMH;AACAE,MAAAA,IAPG;AAQH;AACA;AAEAI,MAAAA;AAXG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeKZ,QAfL,CADJ;AAmBH,CAvED;;AAyEA,eAAeL,UAAU,CAACI,eAAD,CAAzB","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { context } from \"./context\";\r\nimport { successMessage, errorMessage } from \"../../utils/message\";\r\nimport { RegisterCustomers } from \"../../services/userService\";\r\nimport { decodeToken } from \"../../utils/decodeToken\";\r\nimport { withRouter } from \"react-router\";\r\nimport { addUser } from \"../../actions/user\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\n\r\n\r\nconst CustomerContext = ({ children, history }) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [tel, setTel] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [desc, setDesc] = useState();\r\n\r\n    const [, forceUpdate] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    /*const resetStates = () => {\r\n        setFullname(\"\");\r\n        setMobile(\"\");\r\n        setPassword(\"\");\r\n        setPolicy();\r\n    };*/\r\n\r\n\r\n    /************************************************* */\r\n    const handleRegisterCustomers = async event => {\r\n        event.preventDefault();\r\n        const customer = {\r\n            fullname, tel, address, desc\r\n        };\r\n\r\n        try {\r\n            //  if (validator.current.allValid()) {\r\n            dispatch(showLoading());\r\n            const { status } = await RegisterCustomers(customer);\r\n            console.log(status);\r\n            if (status === 201) {\r\n                successMessage(\"کاربر با موفقیت ساخته شد.\");\r\n                dispatch(hideLoading());\r\n                history.push(\"/login\");\r\n            } else if (status === 202) {\r\n                errorMessage(\"شناسه ای با این شماره موبایل قبلا ثبت شده است.\");\r\n                dispatch(hideLoading());\r\n                history.push(\"/resister\");\r\n            }\r\n            /* } else {\r\n                 validator.current.showMessages();\r\n                 forceUpdate(1);\r\n             }*/\r\n\r\n        } catch (ex) {\r\n            errorMessage(\"مشکلی در ثبت نام پیش آمده.\");\r\n            dispatch(hideLoading());\r\n            console.log(ex);\r\n        }\r\n    };\r\n    return (\r\n        <context.Provider\r\n            value={{\r\n                fullname,\r\n                /// setFullname,\r\n                tel,\r\n                //  setMobile,\r\n                address,\r\n                // setPassword,\r\n                desc,\r\n                // setPolicy,\r\n                //validator,\r\n\r\n                handleRegisterCustomers\r\n            }}\r\n        >\r\n            {children}\r\n        </context.Provider>\r\n    );\r\n};\r\n\r\nexport default withRouter(CustomerContext);\r\n"]},"metadata":{},"sourceType":"module"}