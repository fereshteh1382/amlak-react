{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\src\\\\components\\\\Register\\\\Register.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport { registerUser } from \"./../../services/userService\";\nimport { Sugar } from \"react-preloaders\";\nimport Helmet from \"react-helmet\";\nimport { isEmpty } from \"lodash\";\nimport { Redirect } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nconst Register = ({\n  history\n}) => {\n  const user = useSelector(state => state.user);\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [policy, setPolicy] = useState();\n  const [loading, setLoading] = useState(false);\n  const [, forceUpdate] = useState();\n  const validator = useRef(new SimpleReactValidator({\n    messages: {\n      required: \"پر کردن این فیلد الزامی میباشد\",\n      min: \"کمتر از 5 کاراکتر نباید باشد\",\n      email: \"ایمیل نوشته شده صحیح نمی باشد\"\n    },\n    element: message => React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, message)\n  }));\n\n  const reset = () => {\n    setFullname(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const user = {\n      fullname,\n      email,\n      password\n    };\n\n    try {\n      if (validator.current.allValid()) {\n        setLoading(true);\n        const {\n          status\n        } = await registerUser(user);\n\n        if (status === 201) {\n          toast.success(\"کاربر با موفقیت ساخته شد.\", {\n            position: \"top-right\",\n            closeOnClick: true\n          });\n          setLoading(false);\n          history.push(\"/login\");\n          reset();\n        }\n      } else {\n        validator.current.showMessages();\n        forceUpdate(1);\n      }\n    } catch (ex) {\n      toast.error(\"مشکلی پیش آمده.\", {\n        position: \"top-right\",\n        closeOnClick: true\n      });\n      setLoading(false);\n      console.log(ex);\n    }\n  };\n\n  if (!isEmpty(user)) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  });\n  return React.createElement(\"main\", {\n    className: \"client-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A \")), React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\u062A\\u0627\\u067E\\u0644\\u0631\\u0646 | \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\")), React.createElement(Sugar, {\n    time: 0,\n    color: \"#fc03d7\",\n    customLoading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-layer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    id: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fullname\",\n    className: \"form-control\",\n    placeholder: \"\\u0646\\u0627\\u0645 \\u0648 \\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC\",\n    \"aria-describedby\": \"username\",\n    value: fullname,\n    onChange: e => {\n      setFullname(e.target.value);\n      validator.current.showMessageFor(\"fullname\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), validator.current.message(\"fullname\", fullname, \"required|min:5\")), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    id: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    className: \"form-control\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    \"aria-describedby\": \"email-address\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n      validator.current.showMessageFor(\"email\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), validator.current.message(\"email\", email, \"required|email\")), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    id: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-lock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \",\n    \"aria-describedby\": \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n      validator.current.showMessageFor(\"password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), validator.current.message(\"password\", password, \"required|min:5\")), React.createElement(\"div\", {\n    className: \"accept-rules\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"policy\",\n    value: policy,\n    onChange: e => {\n      setPolicy(e.currentTarget.checked);\n      validator.current.showMessageFor(\"policy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), \" \", \"\\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646 \\u0648 \\u0645\\u0642\\u0631\\u0631\\u0627\\u062A \\u0633\\u0627\\u06CC\\u062A \\u0631\\u0627 \\u0645\\u06CC\\u067E\\u0630\\u06CC\\u0631\\u0645\", \" \"), validator.current.message(\"policy\", policy, \"required\")), React.createElement(\"div\", {\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"zmdi zmdi-assignment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), \" \\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646 \\u0648 \\u0645\\u0642\\u0631\\u0631\\u0627\\u062A \\u0633\\u0627\\u06CC\\u062A !\"), React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"zmdi zmdi-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), \" \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\", \" \")), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \" \", \"\\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\", \" \")))));\n};\n\nexport default Register;","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/components/Register/Register.jsx"],"names":["React","useState","useRef","SimpleReactValidator","toast","registerUser","Sugar","Helmet","isEmpty","Redirect","useSelector","Register","history","user","state","fullname","setFullname","email","setEmail","password","setPassword","policy","setPolicy","loading","setLoading","forceUpdate","validator","messages","required","min","element","message","color","reset","handleSubmit","event","preventDefault","current","allValid","status","success","position","closeOnClick","push","showMessages","ex","error","console","log","e","target","value","showMessageFor","currentTarget","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport { registerUser } from \"./../../services/userService\";\r\nimport { Sugar } from \"react-preloaders\";\r\nimport Helmet from \"react-helmet\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Register = ({ history }) => {\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [policy, setPolicy] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [, forceUpdate] = useState();\r\n    const validator = useRef(\r\n        new SimpleReactValidator({\r\n            messages: {\r\n                required: \"پر کردن این فیلد الزامی میباشد\",\r\n                min: \"کمتر از 5 کاراکتر نباید باشد\",\r\n                email: \"ایمیل نوشته شده صحیح نمی باشد\"\r\n            },\r\n            element: message => <div style={{ color: \"red\" }}>{message}</div>\r\n        })\r\n    );\r\n\r\n    const reset = () => {\r\n        setFullname(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const user = {\r\n            fullname,\r\n            email,\r\n            password\r\n        };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                setLoading(true);\r\n                const { status } = await registerUser(user);\r\n                if (status === 201) {\r\n                    toast.success(\"کاربر با موفقیت ساخته شد.\", {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true\r\n                    });\r\n                    setLoading(false);\r\n                    history.push(\"/login\");\r\n                    reset();\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            toast.error(\"مشکلی پیش آمده.\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true\r\n            });\r\n            setLoading(false);\r\n            console.log(ex);\r\n        }\r\n    };\r\n\r\n    if (!isEmpty(user)) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n        <main className=\"client-page\">\r\n            <div className=\"container-content\">\r\n                <header>\r\n                    <h2> عضویت در سایت </h2>\r\n                </header>\r\n                <Helmet>\r\n                    <title>تاپلرن | عضویت در سایت</title>\r\n                </Helmet>\r\n\r\n                <Sugar time={0} color=\"#fc03d7\" customLoading={loading} />\r\n\r\n                <div className=\"form-layer\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"username\">\r\n                                <i className=\"zmdi zmdi-account\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"fullname\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"نام و نام خانوادگی\"\r\n                                aria-describedby=\"username\"\r\n                                value={fullname}\r\n                                onChange={e => {\r\n                                    setFullname(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"fullname\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"fullname\",\r\n                                fullname,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span\r\n                                className=\"input-group-addon\"\r\n                                id=\"email-address\"\r\n                            >\r\n                                <i className=\"zmdi zmdi-email\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ایمیل\"\r\n                                aria-describedby=\"email-address\"\r\n                                value={email}\r\n                                onChange={e => {\r\n                                    setEmail(e.target.value);\r\n                                    validator.current.showMessageFor(\"email\");\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"email\",\r\n                                email,\r\n                                \"required|email\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"password\">\r\n                                <i className=\"zmdi zmdi-lock\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"رمز عبور \"\r\n                                aria-describedby=\"password\"\r\n                                value={password}\r\n                                onChange={e => {\r\n                                    setPassword(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"password\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"password\",\r\n                                password,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"accept-rules\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"policy\"\r\n                                    value={policy}\r\n                                    onChange={e => {\r\n                                        setPolicy(e.currentTarget.checked);\r\n                                        validator.current.showMessageFor(\r\n                                            \"policy\"\r\n                                        );\r\n                                    }}\r\n                                />{\" \"}\r\n                                قوانین و مقررات سایت را میپذیرم{\" \"}\r\n                            </label>\r\n                            {validator.current.message(\r\n                                \"policy\",\r\n                                policy,\r\n                                \"required\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"link\">\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-assignment\"></i> قوانین\r\n                                و مقررات سایت !\r\n                            </a>\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-account\"></i> ورود به\r\n                                سایت{\" \"}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\">\r\n                            {\" \"}\r\n                            عضویت در سایت{\" \"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}