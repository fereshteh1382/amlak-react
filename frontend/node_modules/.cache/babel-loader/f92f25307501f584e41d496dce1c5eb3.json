{"ast":null,"code":"import _regeneratorRuntime from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from\"react\";import SimpleReactValidator from\"simple-react-validator\";import{Sugar}from\"react-preloaders\";import{withRouter}from\"react-router-dom\";import{loginUser}from\"../../services/userService\";import{toast}from\"react-toastify\";import Helmet from\"react-helmet\";var Login=function Login(_ref){var history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),forceUpdate=_useState8[1];var validator=useRef(new SimpleReactValidator({messages:{required:\"پر کردن این فیلد الزامی میباشد\",min:\"کمتر از 5 کاراکتر نباید باشد\",email:\"ایمیل نوشته شده صحیح نمی باشد\"},element:function element(message){return React.createElement(\"div\",{style:{color:\"red\"}},message);}}));var reset=function reset(){setEmail(\"\");setPassword(\"\");};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var user,_ref3,status,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();user={email:email,password:password};_context.prev=2;if(!validator.current.allValid()){_context.next=13;break;}setLoading(true);_context.next=7;return loginUser(user);case 7:_ref3=_context.sent;status=_ref3.status;data=_ref3.data;if(status===200){toast.success(\"ورود موفقیت آمیز بود.\",{position:\"top-right\",closeOnClick:true});localStorage.setItem(\"token\",data.token);setLoading(false);history.replace(\"/\");reset();}_context.next=15;break;case 13:validator.current.showMessages();forceUpdate(1);case 15:_context.next=22;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](2);console.log(_context.t0);setLoading(false);toast.error(\"مشکلی پیش آمده.\",{position:\"top-right\",closeOnClick:true});case 22:case\"end\":return _context.stop();}}},_callee,null,[[2,17]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return React.createElement(\"main\",{className:\"client-page\"},React.createElement(\"div\",{className:\"container-content\"},React.createElement(\"header\",null,React.createElement(\"h2\",null,\" \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A \")),React.createElement(Helmet,null,React.createElement(\"title\",null,\"\\u062A\\u0627\\u067E\\u0644\\u0631\\u0646 | \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\")),React.createElement(Sugar,{time:0,color:\"#fc03d7\",customLoading:loading}),React.createElement(\"div\",{className:\"form-layer\"},React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"span\",{className:\"input-group-addon\",id:\"email-address\"},React.createElement(\"i\",{className:\"zmdi zmdi-email\"})),React.createElement(\"input\",{type:\"text\",name:\"email\",className:\"form-control\",placeholder:\"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\"aria-describedby\":\"email-address\",value:email,onChange:function onChange(e){setEmail(e.target.value);validator.current.showMessageFor(\"email\");}}),validator.current.message(\"email\",email,\"required|email\")),React.createElement(\"div\",{className:\"input-group\"},React.createElement(\"span\",{className:\"input-group-addon\",id:\"password\"},React.createElement(\"i\",{className:\"zmdi zmdi-lock\"})),React.createElement(\"input\",{type:\"password\",name:\"password\",className:\"form-control\",placeholder:\"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \",\"aria-describedby\":\"password\",value:password,onChange:function onChange(e){setPassword(e.target.value);validator.current.showMessageFor(\"password\");}}),validator.current.message(\"password\",password,\"required|min:5\")),React.createElement(\"div\",{className:\"remember-me\"},React.createElement(\"label\",null,React.createElement(\"input\",{type:\"checkbox\",name:\"\"}),\" \\u0645\\u0631\\u0627 \\u0628\\u062E\\u0627\\u0637\\u0631 \\u0628\\u0633\\u067E\\u0627\\u0631\",\" \")),React.createElement(\"div\",{className:\"link\"},React.createElement(\"a\",{href:\"\"},\" \",React.createElement(\"i\",{className:\"zmdi zmdi-lock\"}),\" \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u0645 !\"),React.createElement(\"a\",{href:\"\"},\" \",React.createElement(\"i\",{className:\"zmdi zmdi-account\"}),\" \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\",\" \")),React.createElement(\"button\",{className:\"btn btn-success\"},\" \",\"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\",\" \")))));};export default withRouter(Login);","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/components/Login/Login.jsx"],"names":["React","useState","useRef","SimpleReactValidator","Sugar","withRouter","loginUser","toast","Helmet","Login","history","email","setEmail","password","setPassword","loading","setLoading","forceUpdate","validator","messages","required","min","element","message","color","reset","handleSubmit","event","preventDefault","user","current","allValid","status","data","success","position","closeOnClick","localStorage","setItem","token","replace","showMessages","console","log","error","e","target","value","showMessageFor"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Sugar } from \"react-preloaders\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [, forceUpdate] = useState();\r\n\r\n    const validator = useRef(\r\n        new SimpleReactValidator({\r\n            messages: {\r\n                required: \"پر کردن این فیلد الزامی میباشد\",\r\n                min: \"کمتر از 5 کاراکتر نباید باشد\",\r\n                email: \"ایمیل نوشته شده صحیح نمی باشد\"\r\n            },\r\n            element: message => <div style={{ color: \"red\" }}>{message}</div>\r\n        })\r\n    );\r\n\r\n    const reset = () => {\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const user = { email, password };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                setLoading(true);\r\n                const { status, data } = await loginUser(user);\r\n                if (status === 200) {\r\n                    toast.success(\"ورود موفقیت آمیز بود.\", {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true\r\n                    });\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    setLoading(false);\r\n                    history.replace(\"/\");\r\n                    reset();\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n            setLoading(false);\r\n            toast.error(\"مشکلی پیش آمده.\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"client-page\">\r\n            <div className=\"container-content\">\r\n                <header>\r\n                    <h2> ورود به سایت </h2>\r\n                </header>\r\n                <Helmet>\r\n                    <title>تاپلرن | ورود به سایت</title>\r\n                </Helmet>\r\n\r\n                <Sugar time={0} color=\"#fc03d7\" customLoading={loading} />\r\n\r\n                <div className=\"form-layer\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <span\r\n                                className=\"input-group-addon\"\r\n                                id=\"email-address\"\r\n                            >\r\n                                <i className=\"zmdi zmdi-email\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ایمیل\"\r\n                                aria-describedby=\"email-address\"\r\n                                value={email}\r\n                                onChange={e => {\r\n                                    setEmail(e.target.value);\r\n                                    validator.current.showMessageFor(\"email\");\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"email\",\r\n                                email,\r\n                                \"required|email\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"password\">\r\n                                <i className=\"zmdi zmdi-lock\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"رمز عبور \"\r\n                                aria-describedby=\"password\"\r\n                                value={password}\r\n                                onChange={e => {\r\n                                    setPassword(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"password\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"password\",\r\n                                password,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"remember-me\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"\" /> مرا بخاطر\r\n                                بسپار{\" \"}\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"link\">\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-lock\"></i> رمز عبور خود\r\n                                را فراموش کرده ام !\r\n                            </a>\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-account\"></i> عضویت در\r\n                                سایت{\" \"}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\">\r\n                            {\" \"}\r\n                            ورود به سایت{\" \"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}