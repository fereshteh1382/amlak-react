{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Sugar } from \"react-preloaders\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { loginUser } from \"../../services/userService\";\nimport { toast } from \"react-toastify\";\nimport Helmet from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"./../../actions/user\";\nimport { decodeToken } from \"./../../utils/decodeToken\";\nimport { isEmpty } from \"lodash\";\n\nconst Login = ({\n  history\n}) => {\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [, forceUpdate] = useState();\n  const validator = useRef(new SimpleReactValidator({\n    messages: {\n      required: \"پر کردن این فیلد الزامی میباشد\",\n      min: \"کمتر از 5 کاراکتر نباید باشد\",\n      email: \"ایمیل نوشته شده صحیح نمی باشد\"\n    },\n    element: message => React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, message)\n  }));\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const user = {\n      email,\n      password\n    };\n\n    try {\n      if (validator.current.allValid()) {\n        setLoading(true);\n        const {\n          status,\n          data\n        } = await loginUser(user);\n\n        if (status === 200) {\n          toast.success(\"ورود موفقیت آمیز بود.\", {\n            position: \"top-right\",\n            closeOnClick: true\n          });\n          localStorage.setItem(\"token\", data.token);\n          dispatch(addUser(decodeToken(data.token).payload.user));\n          setLoading(false);\n          history.replace(\"/\");\n          reset();\n        }\n      } else {\n        validator.current.showMessages();\n        forceUpdate(1);\n      }\n    } catch (ex) {\n      console.log(ex);\n      setLoading(false);\n      toast.error(\"مشکلی پیش آمده.\", {\n        position: \"top-right\",\n        closeOnClick: true\n      });\n    }\n  };\n\n  if (!isEmpty(user)) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  });\n  return React.createElement(\"main\", {\n    className: \"client-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A \")), React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\u062A\\u0627\\u067E\\u0644\\u0631\\u0646 | \\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\")), React.createElement(Sugar, {\n    time: 0,\n    color: \"#fc03d7\",\n    customLoading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-layer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    id: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    className: \"form-control\",\n    placeholder: \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\",\n    \"aria-describedby\": \"email-address\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n      validator.current.showMessageFor(\"email\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), validator.current.message(\"email\", email, \"required|email\")), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"input-group-addon\",\n    id: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"zmdi zmdi-lock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \",\n    \"aria-describedby\": \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n      validator.current.showMessageFor(\"password\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), validator.current.message(\"password\", password, \"required|min:5\")), React.createElement(\"div\", {\n    className: \"remember-me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), \" \\u0645\\u0631\\u0627 \\u0628\\u062E\\u0627\\u0637\\u0631 \\u0628\\u0633\\u067E\\u0627\\u0631\", \" \")), React.createElement(\"div\", {\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"zmdi zmdi-lock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), \" \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u0645 !\"), React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    className: \"zmdi zmdi-account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), \" \\u0639\\u0636\\u0648\\u06CC\\u062A \\u062F\\u0631 \\u0633\\u0627\\u06CC\\u062A\", \" \")), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \" \", \"\\u0648\\u0631\\u0648\\u062F \\u0628\\u0647 \\u0633\\u0627\\u06CC\\u062A\", \" \")))));\n};\n\nexport default withRouter(Login);","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/components/Login/Login.jsx"],"names":["React","useState","useRef","SimpleReactValidator","Sugar","withRouter","Redirect","loginUser","toast","Helmet","useDispatch","useSelector","addUser","decodeToken","isEmpty","Login","history","user","state","dispatch","email","setEmail","password","setPassword","loading","setLoading","forceUpdate","validator","messages","required","min","element","message","color","reset","handleSubmit","event","preventDefault","current","allValid","status","data","success","position","closeOnClick","localStorage","setItem","token","payload","replace","showMessages","ex","console","log","error","e","target","value","showMessageFor"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Sugar } from \"react-preloaders\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/userService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"./../../actions/user\";\r\nimport { decodeToken } from \"./../../utils/decodeToken\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst Login = ({ history }) => {\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [, forceUpdate] = useState();\r\n\r\n    const validator = useRef(\r\n        new SimpleReactValidator({\r\n            messages: {\r\n                required: \"پر کردن این فیلد الزامی میباشد\",\r\n                min: \"کمتر از 5 کاراکتر نباید باشد\",\r\n                email: \"ایمیل نوشته شده صحیح نمی باشد\"\r\n            },\r\n            element: message => <div style={{ color: \"red\" }}>{message}</div>\r\n        })\r\n    );\r\n\r\n    const reset = () => {\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const user = { email, password };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                setLoading(true);\r\n                const { status, data } = await loginUser(user);\r\n                if (status === 200) {\r\n                    toast.success(\"ورود موفقیت آمیز بود.\", {\r\n                        position: \"top-right\",\r\n                        closeOnClick: true\r\n                    });\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    dispatch(addUser(decodeToken(data.token).payload.user));\r\n                    setLoading(false);\r\n                    history.replace(\"/\");\r\n                    reset();\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n            setLoading(false);\r\n            toast.error(\"مشکلی پیش آمده.\", {\r\n                position: \"top-right\",\r\n                closeOnClick: true\r\n            });\r\n        }\r\n    };\r\n\r\n    if (!isEmpty(user)) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n        <main className=\"client-page\">\r\n            <div className=\"container-content\">\r\n                <header>\r\n                    <h2> ورود به سایت </h2>\r\n                </header>\r\n                <Helmet>\r\n                    <title>تاپلرن | ورود به سایت</title>\r\n                </Helmet>\r\n\r\n                <Sugar time={0} color=\"#fc03d7\" customLoading={loading} />\r\n\r\n                <div className=\"form-layer\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <span\r\n                                className=\"input-group-addon\"\r\n                                id=\"email-address\"\r\n                            >\r\n                                <i className=\"zmdi zmdi-email\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"ایمیل\"\r\n                                aria-describedby=\"email-address\"\r\n                                value={email}\r\n                                onChange={e => {\r\n                                    setEmail(e.target.value);\r\n                                    validator.current.showMessageFor(\"email\");\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"email\",\r\n                                email,\r\n                                \"required|email\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-addon\" id=\"password\">\r\n                                <i className=\"zmdi zmdi-lock\"></i>\r\n                            </span>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"رمز عبور \"\r\n                                aria-describedby=\"password\"\r\n                                value={password}\r\n                                onChange={e => {\r\n                                    setPassword(e.target.value);\r\n                                    validator.current.showMessageFor(\r\n                                        \"password\"\r\n                                    );\r\n                                }}\r\n                            />\r\n                            {validator.current.message(\r\n                                \"password\",\r\n                                password,\r\n                                \"required|min:5\"\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"remember-me\">\r\n                            <label>\r\n                                <input type=\"checkbox\" name=\"\" /> مرا بخاطر\r\n                                بسپار{\" \"}\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"link\">\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-lock\"></i> رمز عبور خود\r\n                                را فراموش کرده ام !\r\n                            </a>\r\n                            <a href=\"\">\r\n                                {\" \"}\r\n                                <i className=\"zmdi zmdi-account\"></i> عضویت در\r\n                                سایت{\" \"}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success\">\r\n                            {\" \"}\r\n                            ورود به سایت{\" \"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}