{"ast":null,"code":"var _jsxFileName = \"F:\\\\amlak-react\\\\frontend\\\\src\\\\containers\\\\Amlak.jsx\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; //import Course from \"../components/Course/Course\";\n\nimport MainLayout from \"../components/Layouts/MainLayout\";\nimport UserContext from \"../components/context/userContext\";\nimport CustomerContext from \"../components/context/customerContext\";\nimport Login from \"../components/Login/Login\";\nimport Register from \"../components/Register/Register\"; //import Archive from \"../components/Course/Archive\";\n\nimport Customers from \"../components/Customers/CustomersForm\";\nimport UserProfile from \"../components/Profile/UserProfile\";\nimport { useSelector, useDispatch } from \"react-redux\"; //import { paginate } from \"../utils/paginate\";\n//import { addUser, clearUser } from \"../actions/user\";\n//import { decodeToken } from \"../utils/decodeToken\";\n\nimport Logout from \"../components/Login/Logout\";\nimport { isEmpty } from \"lodash\"; //import NotFound from \"../components/common/NotFound\";\n\nconst Toplearn = () => {\n  //const courses = useSelector(state => state.courses);\n  const user = useSelector(state => state.user); //const dispatch = useDispatch();\n  // const indexCourses = paginate(courses, 1, 8);\n\n  /* useEffect(() => {\r\n       const token = localStorage.getItem(\"token\");\r\n       if (token) {\r\n           const decodedToken = decodeToken(token);\r\n           const dateNow = Date.now() / 1000;\r\n              if (decodedToken.payload.exp < dateNow) {\r\n               localStorage.removeItem(\"token\");\r\n               dispatch(clearUser());\r\n           } else dispatch(addUser(decodedToken.payload.user));\r\n       }\r\n   }, []);*/\n\n  return React.createElement(MainLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/login\",\n    render: () => isEmpty(user) ? React.createElement(UserContext, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/logout\",\n    render: () => isEmpty(user) ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    render: () => isEmpty(user) ? React.createElement(UserContext, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Register, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    render: () => !isEmpty(user) ? React.createElement(CustomerContext, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Customers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/user-profile\",\n    component: UserProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/customers\",\n    component: Customers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default Toplearn;","map":{"version":3,"sources":["F:/amlak-react/frontend/src/containers/Amlak.jsx"],"names":["React","Switch","Route","Redirect","MainLayout","UserContext","CustomerContext","Login","Register","Customers","UserProfile","useSelector","useDispatch","Logout","isEmpty","Toplearn","user","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n//import Course from \"../components/Course/Course\";\r\nimport MainLayout from \"../components/Layouts/MainLayout\";\r\nimport UserContext from \"../components/context/userContext\";\r\nimport CustomerContext from \"../components/context/customerContext\";\r\nimport Login from \"../components/Login/Login\";\r\nimport Register from \"../components/Register/Register\";\r\n//import Archive from \"../components/Course/Archive\";\r\nimport Customers from \"../components/Customers/CustomersForm\";\r\nimport UserProfile from \"../components/Profile/UserProfile\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//import { paginate } from \"../utils/paginate\";\r\n//import { addUser, clearUser } from \"../actions/user\";\r\n//import { decodeToken } from \"../utils/decodeToken\";\r\nimport Logout from \"../components/Login/Logout\";\r\nimport { isEmpty } from \"lodash\";\r\n//import NotFound from \"../components/common/NotFound\";\r\n\r\nconst Toplearn = () => {\r\n    //const courses = useSelector(state => state.courses);\r\n    const user = useSelector(state => state.user);\r\n    //const dispatch = useDispatch();\r\n\r\n    // const indexCourses = paginate(courses, 1, 8);\r\n\r\n    /* useEffect(() => {\r\n         const token = localStorage.getItem(\"token\");\r\n         if (token) {\r\n             const decodedToken = decodeToken(token);\r\n             const dateNow = Date.now() / 1000;\r\n \r\n             if (decodedToken.payload.exp < dateNow) {\r\n                 localStorage.removeItem(\"token\");\r\n                 dispatch(clearUser());\r\n             } else dispatch(addUser(decodedToken.payload.user));\r\n         }\r\n     }, []);*/\r\n\r\n    return (\r\n        <MainLayout>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/login\"\r\n                    render={() =>\r\n                        isEmpty(user) ? (\r\n                            <UserContext>\r\n                                <Login />\r\n                            </UserContext>\r\n                        ) : (\r\n                            <Redirect to=\"/\" />\r\n                        )\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/logout\"\r\n                    render={() =>\r\n                        isEmpty(user) ? <Redirect to=\"/\" /> : <Logout />\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/register\"\r\n                    render={() =>\r\n                        isEmpty(user) ? (\r\n                            <UserContext>\r\n                                <Register />\r\n                            </UserContext>\r\n                        ) : (\r\n                            <Redirect to=\"/\" />\r\n                        )\r\n                    }\r\n                />\r\n                <Route\r\n                    path=\"/register\"\r\n                    render={() =>\r\n                        !isEmpty(user) ? (\r\n                            <CustomerContext>\r\n                                <Customers />\r\n                            </CustomerContext>\r\n                        ) : (\r\n                            <Redirect to=\"/\" />\r\n                        )\r\n                    }\r\n                />\r\n                { /*<Route path=\"/archive\" component={Archive} />*/\r\n                /*<Route path=\"/course/:id\" component={SingleCourse} />*/}\r\n                <Route path=\"/user-profile\" component={UserProfile} />\r\n                <Route path=\"/customers\" component={Customers} />\r\n\r\n                {/*  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={() => <Course courses={indexCourses} />}\r\n                /> */}\r\n                {/* <Route component={NotFound} /> */}\r\n                {/*  <Route path=\"*\" exact component={NotFound} /> */}\r\n            </Switch>\r\n        </MainLayout>\r\n    );\r\n};\r\n\r\nexport default Toplearn;\r\n"]},"metadata":{},"sourceType":"module"}