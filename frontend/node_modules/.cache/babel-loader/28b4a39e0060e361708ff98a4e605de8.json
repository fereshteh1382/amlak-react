{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactJs_Project\\\\weblog-rj-1401-10-10\\\\src\\\\components\\\\context\\\\userContext.jsx\";\nimport React, { useState, useRef } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { useDispatch } from \"react-redux\";\nimport { context } from \"./context\";\nimport { successMessage, errorMessage } from \"./../../utils/message\";\nimport { loginUser, registerUser } from \"../../services/userService\"; //import { decodeToken } from \"./../../utils/decodeToken\";\n\nimport { withRouter } from \"react-router\";\nimport { addUser } from \"./../../actions/user\";\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\n\nconst UserContext = ({\n  children,\n  history\n}) => {\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [policy, setPolicy] = useState();\n  const [, forceUpdate] = useState();\n  const dispatch = useDispatch();\n  const validator = useRef(new SimpleReactValidator({\n    messages: {\n      required: \"پر کردن این فیلد الزامی میباشد\",\n      min: \"کمتر از 5 کاراکتر نباید باشد\",\n      email: \"ایمیل نوشته شده صحیح نمی باشد\"\n    },\n    element: message => React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, message)\n  }));\n\n  const resetStates = () => {\n    setFullname(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setPolicy();\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      email,\n      password\n    };\n\n    try {\n      if (validator.current.allValid()) {\n        dispatch(showLoading());\n        const {\n          status,\n          data\n        } = await loginUser(user);\n\n        if (status === 200) {\n          successMessage(\"ورود موفقیت آمیز بود.\"); // localStorage.setItem(\"token\", data.token);\n          //    dispatch(addUser(decodeToken(data.token).payload.user));\n          //  dispatch(hideLoading());\n\n          history.replace(\"/\");\n          resetStates();\n        }\n      } else {\n        validator.current.showMessages();\n        forceUpdate(1);\n      }\n    } catch (ex) {\n      console.log(ex);\n      dispatch(hideLoading());\n      errorMessage(\"مشکلی پیش آمده.\");\n    }\n  };\n\n  const handleRegister = async event => {\n    event.preventDefault();\n    const user = {\n      fullname,\n      email,\n      password\n    };\n\n    try {\n      if (validator.current.allValid()) {\n        dispatch(showLoading());\n        const {\n          status\n        } = await registerUser(user);\n\n        if (status === 201) {\n          successMessage(\"کاربر با موفقیت ساخته شد.\");\n          dispatch(hideLoading());\n          history.push(\"/login\");\n        }\n      } else {\n        validator.current.showMessages();\n        forceUpdate(1);\n      }\n    } catch (ex) {\n      errorMessage(\"مشکلی در ثبت نام پیش آمده.\");\n      dispatch(hideLoading());\n      console.log(ex);\n    }\n  };\n\n  return React.createElement(context.Provider, {\n    value: {\n      fullname,\n      setFullname,\n      email,\n      setEmail,\n      password,\n      setPassword,\n      policy,\n      setPolicy,\n      validator,\n      handleLogin,\n      handleRegister\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, children);\n};\n\nexport default withRouter(UserContext);","map":{"version":3,"sources":["F:/ReactJs_Project/weblog-rj-1401-10-10/src/components/context/userContext.jsx"],"names":["React","useState","useRef","SimpleReactValidator","useDispatch","context","successMessage","errorMessage","loginUser","registerUser","withRouter","addUser","showLoading","hideLoading","UserContext","children","history","fullname","setFullname","email","setEmail","password","setPassword","policy","setPolicy","forceUpdate","dispatch","validator","messages","required","min","element","message","color","resetStates","handleLogin","event","preventDefault","user","current","allValid","status","data","replace","showMessages","ex","console","log","handleRegister","push"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { context } from \"./context\";\r\nimport { successMessage, errorMessage } from \"./../../utils/message\";\r\nimport { loginUser, registerUser } from \"../../services/userService\";\r\n//import { decodeToken } from \"./../../utils/decodeToken\";\r\nimport { withRouter } from \"react-router\";\r\nimport { addUser } from \"./../../actions/user\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\n\r\nconst UserContext = ({ children, history }) => {\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [policy, setPolicy] = useState();\r\n\r\n    const [, forceUpdate] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const validator = useRef(\r\n        new SimpleReactValidator({\r\n            messages: {\r\n                required: \"پر کردن این فیلد الزامی میباشد\",\r\n                min: \"کمتر از 5 کاراکتر نباید باشد\",\r\n                email: \"ایمیل نوشته شده صحیح نمی باشد\"\r\n            },\r\n            element: message => <div style={{ color: \"red\" }}>{message}</div>\r\n        })\r\n    );\r\n\r\n    const resetStates = () => {\r\n        setFullname(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setPolicy();\r\n    };\r\n\r\n    const handleLogin = async event => {\r\n        event.preventDefault();\r\n        const user = { email, password };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                dispatch(showLoading());\r\n                const { status, data } = await loginUser(user);\r\n                if (status === 200) {\r\n                    successMessage(\"ورود موفقیت آمیز بود.\");\r\n                    // localStorage.setItem(\"token\", data.token);\r\n                    //    dispatch(addUser(decodeToken(data.token).payload.user));\r\n                    //  dispatch(hideLoading());\r\n                    history.replace(\"/\");\r\n                    resetStates();\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            console.log(ex);\r\n            dispatch(hideLoading());\r\n            errorMessage(\"مشکلی پیش آمده.\");\r\n        }\r\n    };\r\n\r\n    const handleRegister = async event => {\r\n        event.preventDefault();\r\n        const user = {\r\n            fullname,\r\n            email,\r\n            password\r\n        };\r\n\r\n        try {\r\n            if (validator.current.allValid()) {\r\n                dispatch(showLoading());\r\n                const { status } = await registerUser(user);\r\n                if (status === 201) {\r\n                    successMessage(\"کاربر با موفقیت ساخته شد.\");\r\n                    dispatch(hideLoading());\r\n                    history.push(\"/login\");\r\n                }\r\n            } else {\r\n                validator.current.showMessages();\r\n                forceUpdate(1);\r\n            }\r\n        } catch (ex) {\r\n            errorMessage(\"مشکلی در ثبت نام پیش آمده.\");\r\n            dispatch(hideLoading());\r\n            console.log(ex);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <context.Provider\r\n            value={{\r\n                fullname,\r\n                setFullname,\r\n                email,\r\n                setEmail,\r\n                password,\r\n                setPassword,\r\n                policy,\r\n                setPolicy,\r\n                validator,\r\n                handleLogin,\r\n                handleRegister\r\n            }}\r\n        >\r\n            {children}\r\n        </context.Provider>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserContext);\r\n"]},"metadata":{},"sourceType":"module"}